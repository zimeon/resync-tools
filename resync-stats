#!/usr/bin/env pythonw
""" Generate summary statistics based on a Resource List."""
from resync import ResourceList
from resync_tools.stats import Stats

import logging
import matplotlib.pyplot as plt
import math
import optparse
import sys


def main():

    if (sys.version_info < (2, 6)):
        sys.exit("This program requires python version 2.6 or later")

    # Options and arguments
    p = optparse.OptionParser(description='ResourceSync stats',
                              usage='usage: %prog [options] [[Resource_Lists]] (-h for help)',
                              add_help_option=True)
    p.add_option('--pdf', '-p', action='store',
                 help='Save PDF to specified file')
    p.add_option('--title', action='store',
                 help="Optional title for plots")
    p.add_option('--testdata', '-t', action='store_true',
                 help='Use built in test data to demo output')
    p.add_option('--bins', '-b', action='store', type='int',
                 help='Set the number of bins used for the histograms')
    p.add_option('--logfile', action='store',
                 help="Send log output to specified file")
    p.add_option('--verbose', '-v', action='store_true',
                 help='Verbose output')
    (opt, args) = p.parse_args()

    level = logging.INFO if opt.verbose else logging.WARN
    format = '%(message)s'
    if (opt.logfile):
        logging.basicConfig(format=format, filename=opt.logfile, level=level)
    else:
        logging.basicConfig(format=format, level=level)

    stats = Stats()
    if (opt.bins):
        stats.bins = opt.bins
    if (opt.testdata):
        rl_uris = [stats.testdata()]
    elif (len(args) == 0):
        p.error("Must specify either resource_list URI(s) as argument or -t")
    else:
        rl_uris = args
    for rl_uri in rl_uris:
        rl = ResourceList()
        rl.read(rl_uri)
        if (opt.verbose):
            logging.warn("Got %d entries from Resource List %s" % (len(rl), rl_uri))
        stats.extract(rl)
    stats.analyze_and_summarize(opt=opt)

if __name__ == '__main__':
    main()
