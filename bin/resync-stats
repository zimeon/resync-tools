#!/usr/bin/env python

from resync.resource_list import ResourceList
import matplotlib.pyplot as plt
import math
import optparse
import sys

def strip_zeros(d):
    dnz=[]
    return(dnz)

def get_data0():
    d = [0,1,2,3,3,4,4,4,4,5,6,7,10]
    return(d, strip_zeros(d))

def get_data1(uri):
    rl = ResourceList()
    rl.read(uri)
    print "Got %d entries" % len(rl)
    lengths = []
    lengths_no_zero = []
    no_length = 0
    for r in rl:
        if (r.length is not None):
            l = r.length / 1000.0
            lengths.append(l)
            if (l>0):
                lengths_no_zero.append(math.log10(l))
        else:
            no_length+=1
    print "%d resources have no length information" % (no_length)
    return(lengths, lengths_no_zero)


def main():

    if (sys.version_info < (2,6)):
        sys.exit("This program requires python version 2.6 or later")
    
    # Options and arguments
    p = optparse.OptionParser(description='ResourceSync stats',
                              usage='usage: %prog [options] (-h for help)',
                              add_help_option=False)
    p.add_option('--resourcelist','-r',action='store',
                 help='Specify resource list to examine')
    (opts,args) = p.parse_args()
    
    if (not opts.resourcelist):
        (d,dnz) = get_data0()
    else:
        (d,dnz) = get_data1(opts.resourcelist)

    save_as = None
    #save_as = 'hist.pdf'
    #print d
    fig = plt.figure()
    tp = fig.add_subplot(2,2,3)
    tp.text(0,0,'TEXT AT 0,0')
    f1 = fig.add_subplot(2,2,1)
    if (len(d)>0):
        f1.hist(d, bins=100)
        f1.set_title('Histogram of resource sizes')
        f1.set_xlabel('Size (kB)')
        f1.set_ylabel('Number of resources')
    else:
        f1.text(0.1,0.5,'No resources with length info')
        f2 = fig.add_subplot(2,2,2)
        if (len(dnz)>0):
            f2.hist(dnz, bins=100)
            f2.set_title('Histogram of log10(resource sizes)')
            f2.set_xlabel('log10( Size (kB) )')
            f2.set_ylabel('Number of resources')
        else:
            f2.text(0.1,0.5,'No resources with length info')
    if (save_as):
        plt.savefig(save_as, format='pdf', orientation='landscape')
    else:
        plt.show()
        

if __name__ == '__main__':
    main()
